---

- name: Get stat for the original iso file
  stat:
    path: "{{ iso_file }}"
  register: iso_stat
  failed_when:
    - not iso_stat.stat.exists

- name: Create the removable device lookup dictionary
  set_fact:
    removable_devices: "{{ removable_devices | default({}) | combine({item : ansible_devices[item].model}) }}"
  when: ansible_devices[item].removable == "1"
  with_items:
    - "{{ ansible_devices.keys() }}"

- name: Create the device menu
  set_fact:
    device_menu: |
      {{ device_menu | default('') }}
      Name: {{ item.key }} ({{ item.value }})
  with_dict:
    - "{{ removable_devices }}"

- block:
    - name: Prompt for device to flash
      pause:
        prompt: |
          We found the following removable devices:
          {{ device_menu }}
          Please enter the name of the device you want to install vx-iso on.
      register: device_name
 
    - name: Set device var
      set_fact: 
        device: "{{ device_name.user_input }}"

  when: device is not defined

- name: Set USB disk path var
  set_fact:
    usb_disk_path: "/dev/{{ device }}"

- name: Confirm the device exists and is removable
  stat:
    path: "{{ usb_disk_path }}"
  register: usb_disk_stat
  failed_when:
    - not usb_disk_stat.stat.exists or ansible_devices[device].removable != "1"

- name: Get any active mounts
  shell:
    cmd: lsblk -no mountpoint {{ usb_disk_path }} | sed '/^$/d'
  register: lsblk_result

- name: Unmount the USB drive
  mount: 
    path: "{{ item }}"
    state: unmounted
  with_items:
    - "{{ lsblk_result.stdout_lines }}"
 
- name: Copy the vx-iso image to the USB drive. This may take a minute
  command: dd if={{ iso_file }} of={{ usb_disk_path }} bs=4M 
  become: true

- name: Simple sanity check of the copied data
  command: cmp -n {{ iso_stat.stat.size }} {{ iso_file }} {{ usb_disk_path }}
  become: true
  register: cmp_result

- name: Check if the copy was successful
  debug:
    msg: "Flashing the USB device was {{ (cmp_result.rc == 0) | ternary('successful', 'NOT SUCCESSFUL') }}"
